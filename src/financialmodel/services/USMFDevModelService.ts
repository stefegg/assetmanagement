import { USMFDevelopmentModelConfig } from "../config/development/USMFConfig";
import { USMFDevelopmentReval } from "../models/reval/development/USMFDevelopmentReval";
import { Asset } from "../models/Asset";
import { ActualData } from "../types/reval/ActualData";
import { USMFDevelopmentRevalInputType } from "../types/assumptions/USDevelopmentAssumptions";

export const initiateRevalModel = (id: string, devAssumptions: USMFDevelopmentRevalInputType) => {
  const asset: Asset = {
    id: "asset-1",
    name: "Sample Asset",
    type: "Residential",
    location: "New York",
    status: "Active",
  };

  const actuals: ActualData = {
    actualDates: [new Date()],
    actualData: [],
  };

  return new USMFDevelopmentReval({
    id: id,
    name: "Sample Development Project",
    revalType: "Development",
    dealType: "Multifamily",
    assetType: "Residential",
    period: "Q4 2023",
    asset: asset,
    actuals: actuals,
    devAssumptions: devAssumptions,
    revalDate: new Date(),
    country: "USA",
    revalPeriod: "2023-Q4",
    modelDates: [new Date(), new Date(2024, 11, 31)],
  });
};

export const initialRevalModelAssumtion = () => {
  const devAssumptions: USMFDevelopmentRevalInputType = {
    propertyDescription: {
      propertyName: "Sample Property",
      address: "123 Main St",
      city: "New York",
      state: "NY",
      msa: "New York-Newark-Jersey City",
      submarket: "Manhattan",
      productType: "Multifamily",
      residentialMarketRateUnits: 200,
      residentialAffordableUnits: 0,
      totalNRSF: 170000,
      grossLandArea: 20000,
      netLandArea: 18000,
      loanAbstractLink: "",
      investmentVehicle: "LLC",
    },
    projectSchedule: {
      ventureCloseDate: new Date(2024, 0, 1),
      landCloseDate: new Date(2024, 0, 1),
      constructionStartDate: new Date(2024, 0, 1),
      firstUnitDate: new Date(2025, 6, 1),
      lastUnitDate: new Date(2025, 11, 31),
      lastUnitHedgeMonth: 18,
      completionDate: new Date(2025, 5, 30),
      completionHedge: 6,
      stablizationDate: new Date(2026, 5, 30),
      firstConstructionDrawDate: new Date(2024, 0, 1),
      LatestConstrcutionDrawDate: new Date(2025, 5, 30),
      forecastAsOfDate: new Date(),
      budgetStartDate: new Date(2024, 0, 1),
      budgetEndDate: new Date(2025, 5, 30),
      actualStartDate: new Date(2024, 0, 1),
      actualEndDate: new Date(2025, 5, 30),
      actualDateAdjustment: 0,
      adjustedActualDate: new Date(2025, 5, 30),
      monthsOfPrelesasing: 6,
      monthsToAbsorbPreleasing: 12,
      numberOfPreleasedUnits: 0,
      avgUnitsAbsorbedPerMonth: 16,
      percentageRenewal: 0.5,
      devPhaseEndDate: 18,
      invPhaseStartDate: new Date(2026, 6, 1),
      invPhaseEndDate: new Date(2027, 5, 30),
      commercialInvPhaseEnd: new Date(2027, 5, 30),
    },
    partnershipStructure: {
      pertnershipAbstract: "",
      preferredReturnCompoundPeriod: "Monthly",
      fundingType: ["Equity"],
      fundingCap: [75000000],
      devPartners: [],
      devWaterfall: {
        hurdleType: ["IRR"],
        upToIRR: [8],
        upToMultiple: [1.5],
        lpShareAboveHurdle: [0.7],
      },
      invWaterfall: {
        hurdleType: ["IRR"],
        upToIRR: [8],
        upToMultiple: [1.5],
        lpShareAboveHurdle: [0.7],
      },
      coinvReturnEnhFee1: 0,
      coinvReturnEnhFee2: 0,
      coinvReturnEnhPromoteScrape: 0,
      promoteIssuanceCashPercentage: 0,
      vmFeeDev: 0,
      vmFeeDevPercentageOf: "Equity",
      vmFeeDevEquityType: "Committed",
      vmFeeStablization: 0,
      vmFeeStablizationPercentageOf: "Equity",
      vmFeeStablizationEquityType: "Committed",
    },
    debtStructure: {
      interestRateUpdatedDate: new Date(),
    },
    operation: {
      marketRatePhysicalOccupancy: 0.95,
      affordablePhysicalOccupancy: 0.95,
      propertyCashMinimum: 100000,
      propertyCashCap: 500000,
      dateType: "Monthly",
      dates: [new Date()],
      marketRentGrowth: [0.03],
      gainLossToLeaseGrowth: [0],
      downUnitLossGrowth: [0],
      miscOtherRentsGrowth: [0],
      recurringConcessionsGrowth: [0],
      concessionsGrowth: [0],
      vacancyLossGrowth: [0],
      nonRevenueUnitsGrowth: [0],
      badDebGrowtht: [0],
      badDebtRecoveryGrowth: [0],
      otherMiscRentalIncomeGrowth: [0],
      totalOtherIncResidentialGrowth: [0],
      totalCorporateHousingIncomeGrowth: [0],
      totalRentalOtherIncCommercialGrowth: [0],
      totalOtherMiscIncomeGrowth: [0],
      totalPayrollBenefitsGrowth: [0.03],
      totalRepairsMaintenanceGrowth: [0.03],
      totalStudentTurnoverExpenseGrowth: [0.03],
      totalMakeReadyRedecoratingGrowth: [0.03],
      totalRecreationalAmenitiesGrowth: [0.03],
      totalContractServicesGrowth: [0.03],
      totalCorporateHousingExpenseGrowth: [0.03],
      totalGuestSuiteExpenseGrowth: [0.03],
      totalFoodServiceExpenseGrowth: [0.03],
      totalAdvertisingMarketingPromotionsGrowth: [0.03],
      totalOfficeExpensesGrowth: [0.03],
      totalOtherGeneralAdministrativeGrowth: [0.03],
      totalGeneralAdministrativeGrowth: [0.03],
      totalUtilitiesGrowth: [0.03],
      totalManagementFeesGrowth: [0.03],
      totalGroundLeaseGrowth: [0.03],
      recoverableOperatingExpensesGrowth: [0.03],
      totalRoutineReplacementExpenseGrowth: [0.03],
      totalCapitalRenovationExpenseGrowth: [0.03],
      totalInterestExpenseGrowth: [0.03],
      totalOtherNonOperatingExpensesGrowth: [0.03],
      totalOtherCapitalExpenseGrowth: [0.03],
      totalPartnershipOwnerExpensesGrowth: [0.03],
      debtServiceGroundLeaseGrowth: [0.03],
      totalDebtServiceGrowth: [0.03],
      totalNonOperatingExpenseGrowth: [0.03],
    },
    commercial: {
      generalVacancy: 0.05,
      tenants: [],
    },
  };

  return devAssumptions;
};
